name: Terraform CD

# whenever push any code into github repo, this yaml file will run 
on:
  workflow_dispatch:
    inputs:
      choice:
        description: 'Environment to run tf apply on'
        required: true
        default: "dev"
        type: choice
        options:
        ##these options here can be used to load different blocks of yaml for different steps
        - dev
        - staging
        - prod

# declare the running agent (what VM to run?)
jobs: # what task u want it to run 
 terraform-cd: # can be called anything 
   runs-on: ubuntu-latest # docker image 

   steps:
  ##setup
   - name: Checkout repository
     uses: actions/checkout@v2 # uses - library in terraform

  #aws configure
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v1
     with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # or hardcode us-east-1

## install terraform (like installing binary)
   - name: Set up Terraform
     uses: hashicorp/setup-terraform@v1

# print env 
   - name: print environment
     run:
      echo "env choice is ${{ github.event.inputs.choice }}"
      
#terraform init
   - name: Initialize Terraform
     run: terraform init # run - command line that we run on our own

# terraform workspace list
   - name: Terraform workspace list
     run : terraform workspace list

# terraform workspace select 
   - name: Terraform workspace new env and select
     run : terraform workspace select ${{ github.event.inputs.choice }} || terraform workspace new ${{ github.event.inputs.choice }}

#terraform apply
   - name: Terraform Apply
     run: terraform apply -var-file=${{ github.event.inputs.choice }}.tfvars -auto-approve

## wait to verify ec2 destroyed
   - name: Pause 3min to verify bucket creation
     run: sleep 1800

## terraform destroy 
   - name: Terraform destroy
     run: terraform destroy -var-file=${{ github.event.inputs.choice }}.tfvars -auto-approve